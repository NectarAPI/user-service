plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

bootRun {
	jvmArgs(["--add-opens=java.base/java.lang=ALL-UNNAMED",
			 "--add-opens=java.base/java.io=ALL-UNNAMED",
			 "--add-opens=java.base/java.util=ALL-UNNAMED",
			 "--add-opens=java.base/java.util.concurrent=ALL-UNNAMED",
			 "--add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED"
	])
}

group = 'ke.co.nectar.user'
version = '3.0.0-alpha'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'commons-codec:commons-codec'
	implementation 'org.postgresql:postgresql'
	testImplementation 'junit:junit:4.13.1'
	testImplementation 'org.hamcrest:hamcrest:2.2'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'com.jayway.jsonpath:json-path'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(Test).configureEach {
	jvmArgs(["--add-opens=java.base/java.lang=ALL-UNNAMED",
			 "--add-opens=java.base/java.io=ALL-UNNAMED",
			 "--add-opens=java.base/java.util=ALL-UNNAMED",
			 "--add-opens=java.base/java.util.concurrent=ALL-UNNAMED",
			 "--add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED"])
}
